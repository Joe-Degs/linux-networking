# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"

  # inline provisioner script
  script = <<-SCRIPT
    sudo apt-get update
    sudo apt-get install curl tmux wget nano git -y
    wget -q \
       https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 \
       https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64

    sudo bash -s <<EOF
    sed -e '/^.*ubuntu-bionic.*/d' -i /etc/hosts
    sed -i -e 's/#DNS=/DNS=8.8.8.8/' /etc/systemd/resolved.conf

    # load a couple of necessary modules 
    modprobe overlay
    modprobe br_netfilter

    # disable swaping
    sed 's/#   /swap.*/#swap.img/' /etc/fstab
    swapoff -a

    service systemd-resolved restart
    EOF

    chmod +x cfssl_linux-amd64 cfssljson_linux-amd64
    sudo mv cfssl_linux-amd64 /usr/local/bin/cfssl
    sudo mv cfssljson_linux-amd64 /usr/local/bin/cfssljson
  SCRIPT

  # setup gateway and loadbalancer
  config.vm.define "gateway" do |srv|
    srv.vm.hostname = "gateway"
    srv.vm.provider "virtualbox" do |vbox|
      vbox.name = "gateway"
      vbox.memory = 1024
      vbox.cpus = 2
      vbox.customize ["modifyvm", :id, "--nic2", "intnet", "--intnet2", "intnet1"]
    end
    box.vm.provision "shell", inline: "#{script}"
    srv.vm.provision "shell", inline: <<-SHELL
      sudo /vagrant/scripts/hostips.sh
      sudo /vagrant/scripts/netconfig.sh
      sudo /vagrant/scripts/setup-haproxy.sh
    SHELL
  end

  # setting master nodes
  (0..2).each do |i|
    config.vm.define "master#{i}" do | srv |
      srv.vm.hostname = "master#{i}"

      # vbox configs
      srv.vm.provider "virtualbox" do |vb|
        vb.memory = 4096
        vb.cpus = 4
        vb.name = "master#{i}"
      end

      # create internal virtual networks `intnet1` and `intnet2`
      srv.vm.provider "virtualbox" do |vb|
        vb.customize ["modifyvm", :id, "--nic2", "intnet", "--intnet2", "intnet1"]
      end

      srv.vm.provision "shell", inline: "#{script}"
    end
  end

  # worker nodes
  (0..5).each do |i|
    config.vm.define "worker#{i}" do |box|
      box.vm.hostname = "worker#{i}"

      box.vm.provider "virtualbox" do |vb|
        vb.memory = 1024
        vb.cpus = 2
        vb.name = "worker#{i}"
        vb.customize ["modifyvm", :id, "--nic2", "intnet", "--intnet2", "intnet1"]
      end

      box.vm.provision "shell", inline: "#{script}"
    end
  end
end
